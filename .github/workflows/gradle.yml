name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    ## create application.yml
    - name: make application.yml
      run: |
        ## create application-database.yaml
        cd ./src/main/resources

        # application.yml 파일 생성
        touch ./application.yml

        # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
        echo "${{ secrets.APPLICATION }}" >> ./application.yml
        
        # application-ouath2.yml 파일 생성
        touch ./application.yml

        # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
        echo "${{ secrets.APPLICATION-OAUTH2}}" >> ./application-oath2.yml
      shell: bash

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew --exclude-task test


    ## 웹 이미지 빌드 및 도커허브에 push
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/project:1.0.0 .
        docker push ${{ secrets.DOCKER_REPO }}/project:1.0.0

    ## ec2 docker Pull And deploy
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker rm $(sudo docker ps -a -q)
          sudo docker rmi $(sudo docker images -q)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/project:1.0.0
 
