name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      ## create application.yml
      - name: make application.yml
        run: |
          cd ./src/main/resources
          
          ## application.yml 파일 생성
          touch ./application.yml
          
          ## GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
          echo "${{ secrets.APPLICATION }}" >> ./application.yml
          
          ## application-oauth2.yml 파일 생성
          touch ./application-oauth2.yml
          
          ## GitHub-Actions 에서 설정한 값을 application-oauth2.yml 파일에 쓰기
          echo "${{ secrets.APPLICATION_OAUTH2 }}" >> ./application-oauth2.yml

        shell: bash

      ## build Docker and Push Docker Hub
      - name: build with Gradle
        run: ./gradlew --exclude-task test
      - name: build Docker
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}:latest

      - name: Run scripts in server
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          script: |
            sudo docker stop $(sudo docker ps -aq)
            sudo docker rm $(sudo docker ps -a -q)
            sudo docker rmi $(sudo docker images -q)
            sudo docker pull ${{ secrets.DOCKER_REPO}}:latest
            sudo docker run -d -p 80:8080 --log-driver=awslogs --log-opt awslogs-region=ap-northeast-2 --log-opt awslogs-group=${{ secrets.LOG_GROUP_NAME }} --log-opt awslogs-stream=${{ secrets.LOG_STREAM_NAME }} ${{ secrets.DOCKER_REPO }}
    
 
